{"cells":[{"cell_type":"code","execution_count":1,"id":"0403377f","metadata":{"id":"0403377f","executionInfo":{"status":"ok","timestamp":1673490543509,"user_tz":-540,"elapsed":3430,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"outputs":[],"source":["import os\n","import io\n","from zipfile import ZipFile\n","import pandas as pd\n","import tensorflow as tf\n","from PIL import Image\n","import numpy as np\n","import random\n","import matplotlib.image as mpimg\n","import matplotlib.pyplot as plt\n","import cv2\n","from sklearn.metrics import *\n","import os\n","import zipfile\n","from google.colab import drive\n","from keras.utils import np_utils\n","from sklearn.model_selection import train_test_split\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator"]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MKd4bLhMY9Kb","executionInfo":{"status":"ok","timestamp":1673490563839,"user_tz":-540,"elapsed":20337,"user":{"displayName":"박준원","userId":"13178446148627772304"}},"outputId":"661e3bca-722f-40b1-be38-6ba19b128e0e"},"id":"MKd4bLhMY9Kb","execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["local_zip = '/content/drive/MyDrive/eyes_train.zip'\n","zip_ref = zipfile.ZipFile(local_zip, 'r')\n","zip_ref.extractall('/content')\n","zip_ref.close()"],"metadata":{"id":"Vr5XgKxgZUJF","executionInfo":{"status":"ok","timestamp":1673490579665,"user_tz":-540,"elapsed":15834,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"Vr5XgKxgZUJF","execution_count":3,"outputs":[]},{"cell_type":"code","source":["#백내장 무 폴더 정리\n","img_dir0 = '/content/eyes_train/eye_train/0'\n","img0 = os.listdir(img_dir0)\n","image0 = list(filter(lambda x: x.find('.jpg') != -1 or x.find('.png') != -1, img0))\n","label0 = list(filter(lambda x : x.find('.json')!=-1,img0))\n","image_0 = []\n","image_label0 = []\n","for i in image0:\n","    img = np.array(Image.open('/content/eyes_train/eye_train/0/{}'.format(i)))\n","    im0 = cv2.resize(img,(224,224))\n","    image_0.append(im0)\n","    image_label0.append(0)"],"metadata":{"id":"D_pWqLysByXk","executionInfo":{"status":"ok","timestamp":1673490607585,"user_tz":-540,"elapsed":27924,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"D_pWqLysByXk","execution_count":4,"outputs":[]},{"cell_type":"code","source":["#백내장 초기 폴더 정리\n","img_dir1 = '/content/eyes_train/eye_train/1'\n","img1 = os.listdir(img_dir1)\n","image1 = list(filter(lambda x: x.find('.jpg') != -1 or x.find('.png') != -1, img1))\n","label1 = list(filter(lambda x : x.find('.json')!=-1,img1))\n","for i in image1:\n","    img = np.array(Image.open('/content/eyes_train/eye_train/1/{}'.format(i)))\n","    im1 = cv2.resize(img,(224,224))\n","    image_0.append(im1)\n","    image_label0.append(1)"],"metadata":{"id":"kJ5HCPjhGPVH","executionInfo":{"status":"ok","timestamp":1673490624132,"user_tz":-540,"elapsed":16551,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"kJ5HCPjhGPVH","execution_count":5,"outputs":[]},{"cell_type":"code","source":["#백내장 비성숙 폴더 정리\n","img_dir2 = '/content/eyes_train/eye_train/2'\n","img2 = os.listdir(img_dir2)\n","image2 = list(filter(lambda x: x.find('.jpg') != -1 or x.find('.png') != -1, img2))\n","label2 = list(filter(lambda x : x.find('.json')!=-1,img2))\n","for i in image2:\n","    img = np.array(Image.open('/content/eyes_train/eye_train/2/{}'.format(i)))\n","    im2 = cv2.resize(img,(224,224))\n","    image_0.append(im2)\n","    image_label0.append(2)"],"metadata":{"id":"iNrcYry6GuX0","executionInfo":{"status":"ok","timestamp":1673490640664,"user_tz":-540,"elapsed":16545,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"iNrcYry6GuX0","execution_count":6,"outputs":[]},{"cell_type":"code","source":["#백내장 성숙 폴더 정리\n","img_dir3 = '/content/eyes_train/eye_train/3'\n","img3 = os.listdir(img_dir3)\n","image3 = list(filter(lambda x: x.find('.jpg') != -1 or x.find('.png') != -1, img3))\n","label3 = list(filter(lambda x : x.find('.json')!=-1,img3))\n","for i in image3:\n","    img = np.array(Image.open('/content/eyes_train/eye_train/3/{}'.format(i)))\n","    im3 = cv2.resize(img,(224,224))\n","    image_0.append(im3)\n","    image_label0.append(3)"],"metadata":{"id":"h76Hzvl8HRqK","executionInfo":{"status":"ok","timestamp":1673490657105,"user_tz":-540,"elapsed":16444,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"h76Hzvl8HRqK","execution_count":7,"outputs":[]},{"cell_type":"code","execution_count":8,"id":"9ff23a93","metadata":{"id":"9ff23a93","executionInfo":{"status":"ok","timestamp":1673490658337,"user_tz":-540,"elapsed":1244,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"outputs":[],"source":["x = np.array(image_0)\n","y = np.array(image_label0)"]},{"cell_type":"code","source":["#원핫 인코딩\n","y = np_utils.to_categorical(y)"],"metadata":{"id":"ULV80pESE8iq","executionInfo":{"status":"ok","timestamp":1673490658338,"user_tz":-540,"elapsed":4,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"ULV80pESE8iq","execution_count":9,"outputs":[]},{"cell_type":"code","execution_count":10,"id":"d7912f59","metadata":{"id":"d7912f59","executionInfo":{"status":"ok","timestamp":1673490659537,"user_tz":-540,"elapsed":1202,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"outputs":[],"source":["#데이터 분할\n","x_train, x_val, y_train, y_val = train_test_split(x, y, shuffle =True, test_size = 0.2, random_state = 123)"]},{"cell_type":"code","execution_count":11,"id":"91d5d927","metadata":{"id":"91d5d927","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1673490666066,"user_tz":-540,"elapsed":6531,"user":{"displayName":"박준원","userId":"13178446148627772304"}},"outputId":"27eef997-977f-4912-ee1b-72073adc290c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/keras-applications/efficientnetb4_notop.h5\n","71686520/71686520 [==============================] - 1s 0us/step\n"]}],"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D,MaxPool2D, Dense, Flatten, BatchNormalization, Activation\n","from tensorflow.keras.optimizers import Adam, RMSprop\n","from tensorflow.keras.applications.efficientnet import EfficientNetB4\n","from tensorflow.nn import silu\n","#EfficientNetB4불러오기\n","Eff = EfficientNetB4(weights = 'imagenet', input_shape = (224,224,3), include_top = False, pooling = 'avg')"]},{"cell_type":"code","source":["rmsprop = RMSprop(\n","    learning_rate=0.001,\n",")"],"metadata":{"id":"JXeZI_9uOVx1","executionInfo":{"status":"ok","timestamp":1673490666066,"user_tz":-540,"elapsed":6,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"JXeZI_9uOVx1","execution_count":12,"outputs":[]},{"cell_type":"code","execution_count":13,"id":"6c075ea3","metadata":{"id":"6c075ea3","colab":{"base_uri":"https://localhost:8080/"},"outputId":"fcbd6a99-d136-4e3e-ae0e-b5c8e9774178","executionInfo":{"status":"ok","timestamp":1673495894664,"user_tz":-540,"elapsed":5228602,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","688/688 [==============================] - 552s 752ms/step - loss: 0.6665 - accuracy: 0.7156 - val_loss: 0.6919 - val_accuracy: 0.7484\n","Epoch 2/10\n","688/688 [==============================] - 519s 755ms/step - loss: 0.4918 - accuracy: 0.7976 - val_loss: 0.5093 - val_accuracy: 0.7987\n","Epoch 3/10\n","688/688 [==============================] - 520s 755ms/step - loss: 0.3810 - accuracy: 0.8490 - val_loss: 0.5009 - val_accuracy: 0.8078\n","Epoch 4/10\n","688/688 [==============================] - 519s 754ms/step - loss: 0.3028 - accuracy: 0.8865 - val_loss: 0.4327 - val_accuracy: 0.8532\n","Epoch 5/10\n","688/688 [==============================] - 519s 755ms/step - loss: 0.2238 - accuracy: 0.9168 - val_loss: 0.8748 - val_accuracy: 0.8009\n","Epoch 6/10\n","688/688 [==============================] - 519s 755ms/step - loss: 0.1783 - accuracy: 0.9347 - val_loss: 0.5002 - val_accuracy: 0.8383\n","Epoch 7/10\n","688/688 [==============================] - 519s 754ms/step - loss: 0.1468 - accuracy: 0.9481 - val_loss: 0.4519 - val_accuracy: 0.8487\n","Epoch 8/10\n","688/688 [==============================] - 519s 754ms/step - loss: 0.1229 - accuracy: 0.9560 - val_loss: 0.4843 - val_accuracy: 0.8608\n","Epoch 9/10\n","688/688 [==============================] - 519s 754ms/step - loss: 0.1106 - accuracy: 0.9608 - val_loss: 0.6614 - val_accuracy: 0.8241\n","Epoch 10/10\n","688/688 [==============================] - 519s 754ms/step - loss: 0.0951 - accuracy: 0.9665 - val_loss: 0.5414 - val_accuracy: 0.8434\n"]}],"source":["model = Sequential()\n","#분류기 직접 정리\n","model.add(Eff)\n","model.add(Dense(512))\n","model.add(BatchNormalization())\n","model.add(Activation('silu'))\n","model.add(Dense(4,activation = 'softmax'))\n","model.compile(optimizer=rmsprop, # 옵티마이저 : rmsprop\n","              loss = 'categorical_crossentropy', # 손실 함수 : sparse_categorical_crossentropy\n","              metrics = ['accuracy']) # 모니터링 할 평가지표 : \n","history = model.fit(x_train, y_train, \n","                      epochs = 10, \n","                      batch_size = 32, \n","                      validation_data = (x_val, y_val))"]},{"cell_type":"code","execution_count":14,"id":"ab4c319c","metadata":{"id":"ab4c319c","executionInfo":{"status":"ok","timestamp":1673495894664,"user_tz":-540,"elapsed":23,"user":{"displayName":"박준원","userId":"13178446148627772304"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"1e3d1a88-8d18-42ef-e93f-79733b02407d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," efficientnetb4 (Functional)  (None, 1792)             17673823  \n","                                                                 \n"," dense (Dense)               (None, 512)               918016    \n","                                                                 \n"," batch_normalization (BatchN  (None, 512)              2048      \n"," ormalization)                                                   \n","                                                                 \n"," activation (Activation)     (None, 512)               0         \n","                                                                 \n"," dense_1 (Dense)             (None, 4)                 2052      \n","                                                                 \n","=================================================================\n","Total params: 18,595,939\n","Trainable params: 18,469,708\n","Non-trainable params: 126,231\n","_________________________________________________________________\n"]}],"source":["model.summary()"]},{"cell_type":"code","execution_count":15,"id":"ace5a8ef","metadata":{"id":"ace5a8ef","executionInfo":{"status":"ok","timestamp":1673495895317,"user_tz":-540,"elapsed":659,"user":{"displayName":"박준원","userId":"13178446148627772304"}},"colab":{"base_uri":"https://localhost:8080/","height":350},"outputId":"3596bbb8-7136-44e0-bf3b-6527005d5a09"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# 정확도와 로스 그래프\n","his_dict = history.history\n","loss = his_dict['loss']\n","val_loss = his_dict['val_loss'] \n","\n","epochs = range(1, len(loss) + 1)\n","fig = plt.figure(figsize = (10, 5))\n","\n","# 훈련 및 검증 손실 그리기\n","ax1 = fig.add_subplot(1, 2, 1)\n","ax1.plot(epochs, loss, color = 'blue', label = 'train_loss')\n","ax1.plot(epochs, val_loss, color = 'orange', label = 'val_loss')\n","ax1.set_title('train and val loss')\n","ax1.set_xlabel('epochs')\n","ax1.set_ylabel('loss')\n","ax1.legend()\n","\n","acc = his_dict['accuracy']\n","val_acc = his_dict['val_accuracy']\n","\n","# 훈련 및 검증 정확도 그리기\n","ax2 = fig.add_subplot(1, 2, 2)\n","ax2.plot(epochs, acc, color = 'blue', label = 'train_acc')\n","ax2.plot(epochs, val_acc, color = 'orange', label = 'val_acc')\n","ax2.set_title('train and val acc')\n","ax2.set_xlabel('epochs')\n","ax2.set_ylabel('acc')\n","ax2.legend()\n","\n","plt.show()"]},{"cell_type":"code","execution_count":16,"id":"faa8d401","metadata":{"id":"faa8d401","executionInfo":{"status":"ok","timestamp":1673495899642,"user_tz":-540,"elapsed":4333,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"outputs":[],"source":["# 6. 모델 저장하기\n","from tensorflow.keras.models import load_model\n","model.save('/content/drive/MyDrive/EfficientNetB4_6000_tuning06.h5')"]},{"cell_type":"code","source":["#정확도 f1\n","from sklearn.metrics import *\n","def get_clf_eval(y_test,pred): \n","  f1 = f1_score(y_test,pred,average=\"macro\") \n","  acc = accuracy_score(y_val,predict)   \n","  loss = model.evaluate(x_val, y_val, batch_size=32)\n","  print('정확도 :',acc)\n","  print('f1 score:',f1)\n","  print('loss :',loss )"],"metadata":{"id":"GCgrinsJTahp","executionInfo":{"status":"ok","timestamp":1673495899644,"user_tz":-540,"elapsed":10,"user":{"displayName":"박준원","userId":"13178446148627772304"}}},"id":"GCgrinsJTahp","execution_count":17,"outputs":[]},{"cell_type":"code","source":["predcit = model.predict(x_val)\n","predict = []\n","for i in np.arange(len(predcit)):\n","  labels = np.argmax(predcit[i])\n","  predict.append(labels)\n","predict = np.array(predict)\n","predict = np_utils.to_categorical(predict)"],"metadata":{"id":"Y_qj9JZ_Ti91","executionInfo":{"status":"ok","timestamp":1673495928004,"user_tz":-540,"elapsed":28368,"user":{"displayName":"박준원","userId":"13178446148627772304"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"300af6e7-aa62-41d6-e0dd-4e4f707785dd"},"id":"Y_qj9JZ_Ti91","execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["172/172 [==============================] - 27s 144ms/step\n"]}]},{"cell_type":"code","source":["#EfficientNetB4\n","get_clf_eval(y_val,predict)"],"metadata":{"id":"bYwzwM5yTmIp","executionInfo":{"status":"ok","timestamp":1673495953500,"user_tz":-540,"elapsed":25508,"user":{"displayName":"박준원","userId":"13178446148627772304"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"50e04c02-86da-4b7a-bd0b-dec65f9c1fbf"},"id":"bYwzwM5yTmIp","execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["172/172 [==============================] - 25s 146ms/step - loss: 0.5414 - accuracy: 0.8434\n","정확도 : 0.8433866279069767\n","f1 score: 0.8436937346561293\n","loss : [0.5413585901260376, 0.8433866500854492]\n"]}]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.12"},"colab":{"provenance":[{"file_id":"1k9kI5l1csC_EEZ4Vp_gnLcv1kWoLBWc6","timestamp":1673490487076},{"file_id":"1vEaiCpAKb-Z6nH83_RfsSY-LmBq4z_k3","timestamp":1673409790959},{"file_id":"1yLCfzMEA-lq8rvi3CO6uBorUflR5z_nX","timestamp":1673400321741},{"file_id":"1qjO6e-aiGAKah9apVkOEf0ppjTDBKsdH","timestamp":1673394405663},{"file_id":"1FUiqi91sy2zbvqi4isS75vy-OVn8L1-F","timestamp":1673339006687},{"file_id":"1TcmlFConIROmC5HX9CCLpC10MREBR41T","timestamp":1673314675033},{"file_id":"1DQIi6kJEUE77Z0vTw6pS7k9cBoFuby3_","timestamp":1672917123935},{"file_id":"1HiOPnSrKz18GxzzSRsJkxyZjDCZxzNTw","timestamp":1672909382021},{"file_id":"1Syf7lFpwp2OZRMexYV0SELXNwMyBQ9ur","timestamp":1672732366219},{"file_id":"1tdGegwZ7kMdQ8a5oRZF0bVZ_FSZ_XmMX","timestamp":1672729920760},{"file_id":"12dyzlz-sWPzN_baEMBUcCwsI8Z30vmjr","timestamp":1672726913788},{"file_id":"1xvk-Qtl6KiSozNeUi8TqqtKkwDNNMNTD","timestamp":1672705534688}],"machine_shape":"hm"},"gpuClass":"standard","accelerator":"GPU"},"nbformat":4,"nbformat_minor":5}